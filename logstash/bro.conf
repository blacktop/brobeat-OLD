filter {
    if [message] =~ /^#/ { drop { } }
    else {
        
        if [type] == "conn" {
            grok {
                match => { "message" => "%{BRO_CONN}" }
            }
            
            translate {
                field => "conn_state"
                destination => "conn_state_full"
                    dictionary => [
                        "S0", "Connection attempt seen, no reply",
                        "S1", "Connection established, not terminated",
                        "S2", "Connection established and close attempt by originator seen (but no reply from responder)",
                        "S3", "Connection established and close attempt by responder seen (but no reply from originator)",
                        "SF", "Normal SYN/FIN completion",
                        "REJ", "Connection attempt rejected",
                        "RSTO", "Connection established, originator aborted (sent a RST)",
                        "RSTR", "Established, responder aborted",
                        "RSTOS0", "Originator sent a SYN followed by a RST, we never saw a SYN-ACK from the responder",
                        "RSTRH", "Responder sent a SYN ACK followed by a RST, we never saw a SYN from the (purported) originator",
                        "SH", "Originator sent a SYN followed by a FIN, we never saw a SYN ACK from the responder (hence the connection was 'half' open)",
                        "SHR", "Responder sent a SYN ACK followed by a FIN, we never saw a SYN from the originator",
                        "OTH", "No SYN seen, just midstream traffic (a 'partial connection' that was not later closed)"
                    ]
                }
            }
            
        }
        
        if [type] == "dce_rpc" {
            grok {
                match => { "message" => "%{BRO_DCE_RPC}" }
            }
            
        }
        
        if [type] == "dhcp" {
            grok {
                match => { "message" => "%{BRO_DHCP}" }
            }
            
        }
        
        if [type] == "dnp3" {
            grok {
                match => { "message" => "%{BRO_DNP3}" }
            }
            
        }
        
        if [type] == "dns" {
            grok {
                match => { "message" => "%{BRO_DNS}" }
            }
            
        }
        
        if [type] == "ftp" {
            grok {
                match => { "message" => "%{BRO_FTP}" }
            }
            
        }
        
        if [type] == "http" {
            grok {
                match => { "message" => "%{BRO_HTTP}" }
            }
            
        }
        
        if [type] == "irc" {
            grok {
                match => { "message" => "%{BRO_IRC}" }
            }
            
        }
        
        if [type] == "kerberos" {
            grok {
                match => { "message" => "%{BRO_KERBEROS}" }
            }
            
        }
        
        if [type] == "modbus" {
            grok {
                match => { "message" => "%{BRO_MODBUS}" }
            }
            
        }
        
        if [type] == "modbus_register_change" {
            grok {
                match => { "message" => "%{BRO_MODBUS_REGISTER_CHANGE}" }
            }
            
        }
        
        if [type] == "mysql" {
            grok {
                match => { "message" => "%{BRO_MYSQL}" }
            }
            
        }
        
        if [type] == "ntlm" {
            grok {
                match => { "message" => "%{BRO_NTLM}" }
            }
            
        }
        
        if [type] == "radius" {
            grok {
                match => { "message" => "%{BRO_RADIUS}" }
            }
            
        }
        
        if [type] == "rdp" {
            grok {
                match => { "message" => "%{BRO_RDP}" }
            }
            
        }
        
        if [type] == "rfb" {
            grok {
                match => { "message" => "%{BRO_RFB}" }
            }
            
        }
        
        if [type] == "sip" {
            grok {
                match => { "message" => "%{BRO_SIP}" }
            }
            
        }
        
        if [type] == "smb_cmd" {
            grok {
                match => { "message" => "%{BRO_SMB_CMD}" }
            }
            
        }
        
        if [type] == "smb_files" {
            grok {
                match => { "message" => "%{BRO_SMB_FILES}" }
            }
            
        }
        
        if [type] == "smb_mapping" {
            grok {
                match => { "message" => "%{BRO_SMB_MAPPING}" }
            }
            
        }
        
        if [type] == "smtp" {
            grok {
                match => { "message" => "%{BRO_SMTP}" }
            }
            
        }
        
        if [type] == "snmp" {
            grok {
                match => { "message" => "%{BRO_SNMP}" }
            }
            
        }
        
        if [type] == "socks" {
            grok {
                match => { "message" => "%{BRO_SOCKS}" }
            }
            
        }
        
        if [type] == "ssh" {
            grok {
                match => { "message" => "%{BRO_SSH}" }
            }
            
        }
        
        if [type] == "ssl" {
            grok {
                match => { "message" => "%{BRO_SSL}" }
            }
            
        }
        
        if [type] == "syslog" {
            grok {
                match => { "message" => "%{BRO_SYSLOG}" }
            }
            
        }
        
        if [type] == "tunnel" {
            grok {
                match => { "message" => "%{BRO_TUNNEL}" }
            }
            
        }
        
        if [type] == "files" {
            grok {
                match => { "message" => "%{BRO_FILES}" }
            }
            
        }
        
        if [type] == "pe" {
            grok {
                match => { "message" => "%{BRO_PE}" }
            }
            
        }
        
        if [type] == "x509" {
            grok {
                match => { "message" => "%{BRO_X509}" }
            }
            
        }
        
        if [type] == "netcontrol" {
            grok {
                match => { "message" => "%{BRO_NETCONTROL}" }
            }
            
        }
        
        if [type] == "netcontrol_drop" {
            grok {
                match => { "message" => "%{BRO_NETCONTROL_DROP}" }
            }
            
        }
        
        if [type] == "netcontrol_shunt" {
            grok {
                match => { "message" => "%{BRO_NETCONTROL_SHUNT}" }
            }
            
        }
        
        if [type] == "netcontrol_catch_release" {
            grok {
                match => { "message" => "%{BRO_NETCONTROL_CATCH_RELEASE}" }
            }
            
        }
        
        if [type] == "openflow" {
            grok {
                match => { "message" => "%{BRO_OPENFLOW}" }
            }
            
        }
        
        if [type] == "intel" {
            grok {
                match => { "message" => "%{BRO_INTEL}" }
            }
            
        }
        
        if [type] == "notice" {
            grok {
                match => { "message" => "%{BRO_NOTICE}" }
            }
            
        }
        
        if [type] == "notice_alarm" {
            grok {
                match => { "message" => "%{BRO_NOTICE_ALARM}" }
            }
            
        }
        
        if [type] == "signatures" {
            grok {
                match => { "message" => "%{BRO_SIGNATURES}" }
            }
            
        }
        
        if [type] == "traceroute" {
            grok {
                match => { "message" => "%{BRO_TRACEROUTE}" }
            }
            
        }
        
        if [type] == "known_certs" {
            grok {
                match => { "message" => "%{BRO_KNOWN_CERTS}" }
            }
            
        }
        
        if [type] == "known_devices" {
            grok {
                match => { "message" => "%{BRO_KNOWN_DEVICES}" }
            }
            
        }
        
        if [type] == "known_hosts" {
            grok {
                match => { "message" => "%{BRO_KNOWN_HOSTS}" }
            }
            
        }
        
        if [type] == "known_modbus" {
            grok {
                match => { "message" => "%{BRO_KNOWN_MODBUS}" }
            }
            
        }
        
        if [type] == "known_services" {
            grok {
                match => { "message" => "%{BRO_KNOWN_SERVICES}" }
            }
            
        }
        
        if [type] == "software" {
            grok {
                match => { "message" => "%{BRO_SOFTWARE}" }
            }
            
        }
        
        if [type] == "barnyard2" {
            grok {
                match => { "message" => "%{BRO_BARNYARD2}" }
            }
            
        }
        
        if [type] == "dpd" {
            grok {
                match => { "message" => "%{BRO_DPD}" }
            }
            
        }
        
        if [type] == "unified2" {
            grok {
                match => { "message" => "%{BRO_UNIFIED2}" }
            }
            
        }
        
        if [type] == "weird" {
            grok {
                match => { "message" => "%{BRO_WEIRD}" }
            }
            
        }
        
        if [type] == "capture_loss" {
            grok {
                match => { "message" => "%{BRO_CAPTURE_LOSS}" }
            }
            
        }
        
        if [type] == "cluster" {
            grok {
                match => { "message" => "%{BRO_CLUSTER}" }
            }
            
        }
        
        if [type] == "communication" {
            grok {
                match => { "message" => "%{BRO_COMMUNICATION}" }
            }
            
        }
        
        if [type] == "loaded_scripts" {
            grok {
                match => { "message" => "%{BRO_LOADED_SCRIPTS}" }
            }
            
        }
        
        if [type] == "packet_filter" {
            grok {
                match => { "message" => "%{BRO_PACKET_FILTER}" }
            }
            
        }
        
        if [type] == "prof" {
            grok {
                match => { "message" => "%{BRO_PROF}" }
            }
            
        }
        
        if [type] == "reporter" {
            grok {
                match => { "message" => "%{BRO_REPORTER}" }
            }
            
        }
        
        if [type] == "stats" {
            grok {
                match => { "message" => "%{BRO_STATS}" }
            }
            
        }
        
        if [type] == "stderr" {
            grok {
                match => { "message" => "%{BRO_STDERR}" }
            }
            
        }
        
        if [type] == "stdout" {
            grok {
                match => { "message" => "%{BRO_STDOUT}" }
            }
            
        }
        
    date {
        match => [ "ts", "UNIX" ]
    }
}
